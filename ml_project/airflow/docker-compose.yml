version: '3.7'
x-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}


x-airflow-image: &airflow_image apache/airflow:2.3.0-python3.8

services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
  init:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org"

  webserver:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker

    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver

  scheduler:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker

    restart: always
    depends_on:
      - postgres
    volumes:
      - logs:/opt/airflow/logs
      - ./dags/:/opt/airflow/dags/
      - ./data/:/opt/airflow/data/
      - /var/run/docker.sock:/var/run/docker.sock
    environment: *airflow_environment
    command: scheduler

  base:
    build:
      context: images/airflow-base
    image: airflow-base
    restart: "no"

  download_data:
    build:
      context: images/airflow-download-data
    image: airflow-download-data
    restart: "no"
    depends_on:
      - base

  valdiate_downloaded_data:
    build:
      context: images/airflow-validate-downloaded-data
    image: airflow-validate-downloaded-data
    restart: "no"
    depends_on:
      - base

  copy_train_data:
    build:
      context: images/airflow-prepare-data-for-train
    image: airflow-prepare-data-for-train
    restart: "no"
    depends_on:
      - base

  split_train_data:
    build:
      context: images/airflow-split-train-data
    image: airflow-split-train-data
    restart: "no"
    depends_on:
      - base

  preprocess_train_data:
    build:
      context: images/airflow-preprocess-data
    image: airflow-preprocess-data
    restart: "no"
    depends_on:
      - base

  train_model:
    build:
      context: images/airflow-train-model
    image: airflow-train-model
    restart: "no"
    depends_on:
      - base

  evaluate_model:
    build:
      context: images/airflow-evaluate-model
    image: airflow-evaluate-model
    restart: "no"
    depends_on:
      - base

  compare_models:
    build:
      context: images/airflow-compare-models
    image: airflow-compare-models
    restart: "no"
    depends_on:
      - base

  make_prediction:
    build:
      context: images/airflow-make-prediction
    image: airflow-make-prediction
    restart: "no"
    depends_on:
      - base


volumes:
  logs:
